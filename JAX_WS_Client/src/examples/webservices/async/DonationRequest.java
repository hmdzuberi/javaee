
package examples.webservices.async;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;
import com.training.ifaces.BloodDonor;
import com.training.ifaces.GetRequestResponse;
import com.training.ifaces.ObjectFactory;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DonationRequest", targetNamespace = "http://ifaces.training.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DonationRequest {


    /**
     * 
     * @param bloodGroup
     * @return
     *     returns javax.xml.ws.Response<com.training.ifaces.GetRequestResponse>
     */
    @WebMethod(operationName = "getRequest")
    @RequestWrapper(localName = "getRequest", targetNamespace = "http://ifaces.training.com/", className = "com.training.ifaces.GetRequest")
    @ResponseWrapper(localName = "getRequestResponse", targetNamespace = "http://ifaces.training.com/", className = "com.training.ifaces.GetRequestResponse")
    public Response<GetRequestResponse> getRequestAsync(
        @WebParam(name = "bloodGroup", targetNamespace = "")
        String bloodGroup);

    /**
     * 
     * @param bloodGroup
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getRequest")
    @RequestWrapper(localName = "getRequest", targetNamespace = "http://ifaces.training.com/", className = "com.training.ifaces.GetRequest")
    @ResponseWrapper(localName = "getRequestResponse", targetNamespace = "http://ifaces.training.com/", className = "com.training.ifaces.GetRequestResponse")
    public Future<?> getRequestAsync(
        @WebParam(name = "bloodGroup", targetNamespace = "")
        String bloodGroup,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetRequestResponse> asyncHandler);

    /**
     * 
     * @param bloodGroup
     * @return
     *     returns com.training.ifaces.BloodDonor
     */
    @WebMethod
    @WebResult(name = "donorDetails", targetNamespace = "")
    @RequestWrapper(localName = "getRequest", targetNamespace = "http://ifaces.training.com/", className = "com.training.ifaces.GetRequest")
    @ResponseWrapper(localName = "getRequestResponse", targetNamespace = "http://ifaces.training.com/", className = "com.training.ifaces.GetRequestResponse")
    @Action(input = "http://ifaces.training.com/DonationRequest/getRequestRequest", output = "http://ifaces.training.com/DonationRequest/getRequestResponse")
    public BloodDonor getRequest(
        @WebParam(name = "bloodGroup", targetNamespace = "")
        String bloodGroup);

}
